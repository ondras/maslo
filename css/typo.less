@import "mixins.less";

@font-face {
	font-family: input;
	font-weight: normal;
	src: url(font/Input-Regular.ttf);
}

@font-face {
	font-family: input;
	font-weight: bold;
	src: url(font/Input-Bold.ttf);
}

@font-face {
	font-family: input;
	font-weight: normal;
	font-style: italic;
	src: url(font/Input-Italic.ttf);
}

@font-face {
	font-family: input;
	font-weight: bold;
	font-style: italic;
	src: url(font/Input-BoldItalic.ttf);
}

body {
	-moz-tab-size: var(--tab-size);
	tab-size: var(--tab-size);

	font-size: ~"calc(2 * var(--grid))";
	line-height: calc(3/2);
}

li {
	margin: 0.5em 0;
	list-style: none;
	text-indent: ~"calc(-1 * var(--marker-width))";

	li { margin-left: ~"calc(3 * var(--grid))"; }

	&::before {
		.marker(var(--marker-width));
	}
}

ul, ol {
	padding: 0;
}

ol {
	counter-reset: list-item;
	> li {
		counter-increment: list-item;
		&::before {
			content: counter(list-item) ".";
		}
	}
}

ul > li::before {
	content: "•";
	font-size: 150%;
	vertical-align: sub;
	line-height: 0;
}

pre {
	counter-reset: line;
	div {
		counter-increment: line;
		&::before {
			.marker(4ch);
			content: counter(line) ".";
			font-weight: normal;
		}
	}
}

code {
	font-size: ~"calc(1.6 * var(--grid))";
	line-height: calc(3 / 1.6);
	font-family: input, monospace;
	font-weight: bold;
}

a {
	color: var(--link);
}

blockquote {
	p::before { content: open-quote; }
	p::after { content: close-quote; }

	& + p {
		text-align: right;
		&::before { content: "— "; }
	}
}
